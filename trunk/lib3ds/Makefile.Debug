#############################################################################
# Makefile for building: lib3ds
# Generated by qmake (2.01a) (Qt 4.5.1) on: ??? ?? 20 20:52:33 2009
# Project:  lib3ds.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DLIB3DS_LIBRARY -DQT_DLL -DQT_THREAD_SUPPORT
CFLAGS        = -g -Wall $(DEFINES)
CXXFLAGS      = -g -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"c:\Qt\2009.02\qt\include" -I"c:\Qt\2009.02\qt\include\ActiveQt" -I"debug" -I"." -I"c:\Qt\2009.02\qt\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -mthreads -Wl -shared -Wl,--out-implib,debug\liblib3ds.a
LIBS        =        -L"c:\Qt\2009.02\qt\lib" 
QMAKE         = c:\Qt\2009.02\qt\bin\qmake.exe
IDC           = c:\Qt\2009.02\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = debug

####### Files

SOURCES       = lib3ds\viewport.c \
		lib3ds\vector.c \
		lib3ds\tracks.c \
		lib3ds\tcb.c \
		lib3ds\shadow.c \
		lib3ds\quat.c \
		lib3ds\node.c \
		lib3ds\mesh.c \
		lib3ds\matrix.c \
		lib3ds\material.c \
		lib3ds\light.c \
		lib3ds\io.c \
		lib3ds\file.c \
		lib3ds\ease.c \
		lib3ds\chunk.c \
		lib3ds\camera.c \
		lib3ds\background.c \
		lib3ds\atmosphere.c 
OBJECTS       = debug/viewport.o \
		debug/vector.o \
		debug/tracks.o \
		debug/tcb.o \
		debug/shadow.o \
		debug/quat.o \
		debug/node.o \
		debug/mesh.o \
		debug/matrix.o \
		debug/material.o \
		debug/light.o \
		debug/io.o \
		debug/file.o \
		debug/ease.o \
		debug/chunk.o \
		debug/camera.o \
		debug/background.o \
		debug/atmosphere.o
DIST          = 
QMAKE_TARGET  = lib3ds
DESTDIR        = debug\ #avoid trailing-slash linebreak
TARGET         = lib3ds.dll
DESTDIR_TARGET = debug\lib3ds.dll

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Debug  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.lib3ds.Debug  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec c:\Qt\2009.02\qt\mkspecs\win32-g++ -win32 CONFIG+=release -o Makefile.Debug lib3ds.pro

dist:
	$(ZIP) lib3ds.zip $(SOURCES) $(DIST) lib3ds.pro c:\Qt\2009.02\qt\mkspecs\qconfig.pri c:\Qt\2009.02\qt\mkspecs\features\qt_functions.prf c:\Qt\2009.02\qt\mkspecs\features\qt_config.prf c:\Qt\2009.02\qt\mkspecs\features\exclusive_builds.prf c:\Qt\2009.02\qt\mkspecs\features\default_pre.prf c:\Qt\2009.02\qt\mkspecs\features\win32\default_pre.prf c:\Qt\2009.02\qt\mkspecs\features\debug.prf c:\Qt\2009.02\qt\mkspecs\features\debug_and_release.prf c:\Qt\2009.02\qt\mkspecs\features\default_post.prf c:\Qt\2009.02\qt\mkspecs\features\win32\default_post.prf c:\Qt\2009.02\qt\mkspecs\features\build_pass.prf c:\Qt\2009.02\qt\mkspecs\features\win32\rtti.prf c:\Qt\2009.02\qt\mkspecs\features\win32\exceptions.prf c:\Qt\2009.02\qt\mkspecs\features\win32\stl.prf c:\Qt\2009.02\qt\mkspecs\features\shared.prf c:\Qt\2009.02\qt\mkspecs\features\dll.prf c:\Qt\2009.02\qt\mkspecs\features\warn_on.prf c:\Qt\2009.02\qt\mkspecs\features\qt.prf c:\Qt\2009.02\qt\mkspecs\features\win32\thread.prf c:\Qt\2009.02\qt\mkspecs\features\moc.prf c:\Qt\2009.02\qt\mkspecs\features\win32\windows.prf c:\Qt\2009.02\qt\mkspecs\features\resources.prf c:\Qt\2009.02\qt\mkspecs\features\uic.prf c:\Qt\2009.02\qt\mkspecs\features\yacc.prf c:\Qt\2009.02\qt\mkspecs\features\lex.prf c:\Qt\2009.02\qt\mkspecs\features\include_source_dir.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) debug\viewport.o debug\vector.o debug\tracks.o debug\tcb.o debug\shadow.o debug\quat.o debug\node.o debug\mesh.o debug\matrix.o debug\material.o debug\light.o debug\io.o debug\file.o debug\ease.o debug\chunk.o debug\camera.o debug\background.o debug\atmosphere.o
	-$(DEL_FILE) debug\liblib3ds.a

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Debug

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 



####### Compile

debug/viewport.o: lib3ds/viewport.c lib3ds/viewport.h \
		lib3ds/types.h \
		lib3ds/chunk.h \
		lib3ds/io.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\viewport.o lib3ds\viewport.c

debug/vector.o: lib3ds/vector.c lib3ds/vector.h \
		lib3ds/types.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\vector.o lib3ds\vector.c

debug/tracks.o: lib3ds/tracks.c lib3ds/tracks.h \
		lib3ds/tcb.h \
		lib3ds/types.h \
		lib3ds/io.h \
		lib3ds/chunk.h \
		lib3ds/vector.h \
		lib3ds/quat.h \
		lib3ds/node.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\tracks.o lib3ds\tracks.c

debug/tcb.o: lib3ds/tcb.c lib3ds/tcb.h \
		lib3ds/types.h \
		lib3ds/io.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\tcb.o lib3ds\tcb.c

debug/shadow.o: lib3ds/shadow.c lib3ds/shadow.h \
		lib3ds/types.h \
		lib3ds/chunk.h \
		lib3ds/io.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\shadow.o lib3ds\shadow.c

debug/quat.o: lib3ds/quat.c lib3ds/quat.h \
		lib3ds/types.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\quat.o lib3ds\quat.c

debug/node.o: lib3ds/node.c lib3ds/node.h \
		lib3ds/tracks.h \
		lib3ds/tcb.h \
		lib3ds/types.h \
		lib3ds/file.h \
		lib3ds/background.h \
		lib3ds/atmosphere.h \
		lib3ds/shadow.h \
		lib3ds/viewport.h \
		lib3ds/io.h \
		lib3ds/chunk.h \
		lib3ds/matrix.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\node.o lib3ds\node.c

debug/mesh.o: lib3ds/mesh.c lib3ds/mesh.h \
		lib3ds/types.h \
		lib3ds/io.h \
		lib3ds/chunk.h \
		lib3ds/vector.h \
		lib3ds/matrix.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\mesh.o lib3ds\mesh.c

debug/matrix.o: lib3ds/matrix.c lib3ds/matrix.h \
		lib3ds/types.h \
		lib3ds/quat.h \
		lib3ds/vector.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\matrix.o lib3ds\matrix.c

debug/material.o: lib3ds/material.c lib3ds/material.h \
		lib3ds/types.h \
		lib3ds/chunk.h \
		lib3ds/io.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\material.o lib3ds\material.c

debug/light.o: lib3ds/light.c lib3ds/light.h \
		lib3ds/types.h \
		lib3ds/chunk.h \
		lib3ds/io.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\light.o lib3ds\light.c

debug/io.o: lib3ds/io.c lib3ds/io.h \
		lib3ds/types.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\io.o lib3ds\io.c

debug/file.o: lib3ds/file.c lib3ds/file.h \
		lib3ds/background.h \
		lib3ds/types.h \
		lib3ds/atmosphere.h \
		lib3ds/shadow.h \
		lib3ds/viewport.h \
		lib3ds/chunk.h \
		lib3ds/io.h \
		lib3ds/material.h \
		lib3ds/mesh.h \
		lib3ds/camera.h \
		lib3ds/light.h \
		lib3ds/node.h \
		lib3ds/tracks.h \
		lib3ds/tcb.h \
		lib3ds/matrix.h \
		lib3ds/vector.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\file.o lib3ds\file.c

debug/ease.o: lib3ds/ease.c lib3ds/ease.h \
		lib3ds/types.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\ease.o lib3ds\ease.c

debug/chunk.o: lib3ds/chunk.c lib3ds/chunk.h \
		lib3ds/types.h \
		lib3ds/io.h \
		lib3ds/chunktable.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\chunk.o lib3ds\chunk.c

debug/camera.o: lib3ds/camera.c lib3ds/camera.h \
		lib3ds/types.h \
		lib3ds/chunk.h \
		lib3ds/io.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\camera.o lib3ds\camera.c

debug/background.o: lib3ds/background.c lib3ds/background.h \
		lib3ds/types.h \
		lib3ds/chunk.h \
		lib3ds/io.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\background.o lib3ds\background.c

debug/atmosphere.o: lib3ds/atmosphere.c lib3ds/atmosphere.h \
		lib3ds/types.h \
		lib3ds/chunk.h \
		lib3ds/io.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug\atmosphere.o lib3ds\atmosphere.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

